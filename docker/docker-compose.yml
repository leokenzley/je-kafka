version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper-1
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka-1
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # acesso pelo host (localhost)
      - "29092:29092" # acesso interno (containers)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181

      # ðŸ”‘ Dois listeners:
      # - PLAINTEXT (interno) para comunicaÃ§Ã£o entre containers
      # - PLAINTEXT_HOST (externo) para acessar via localhost
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  # - NecessÃ¡rio apenas para produzir e consumir mensagens avro    
  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    container_name: schema-registry-1
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-1
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:29092
      
  kafdrop:
    image: obsidiandynamics/kafdrop:4.2.0
    container_name: kafdrop-1
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka-1:29092
      SERVER_PORT: 9000

networks:
  broker-kafka:
    driver: bridge
